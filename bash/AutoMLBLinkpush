#!/bin/bash

###############################################################
### Script that should (should) let you do MLB link pushes  ###
###############################################################

YEAR=$1
MNTH=$2
DAY1=$3
DAY2=$4
DAY3=$5
USER=$6
CURR_DIR=`pwd`
HOST=`uname -n`

if [[ "$1" == "-help" || "$1" == "-h" || "$1" == "" || $# < 6 ]]; then
	echo "################################################################################"
	echo "This script is to help automate the MLB Link push process."
	echo "It should be run like below on sce28.mm3 only"
	echo "EX. /opt/bin/AutoMLBLinkpush <Year> <Month> <DAY1> <DAY2> <DAY3 or ""> <USER>"
	echo "You will only be allowed to push the max three days at one time"
	echo "Day 3 can be optional in case that would only leave a day gap"
	echo "################################################################################"
	exit 0
else
	if [[ $# == 6 ]]; then
		if [[ $CURR_DIR != "/opt/bin" || $HOST != "sce28" ]]; then
			echo "please run script from /opt/bin on sce28 only"
			exit 0
		elif [[ -d /export/home/$USER/archive_out_mlb ]]; then
			if [[ "$DAY3" == "x" || "$DAY3" == "X" ]]; then
				### Create the .out files 
				echo "You have Day 3 set to $DAY3, so you will only push two days worth of links"
				echo "The days you are pushing are, $DAY1 - $DAY2"
				echo "ls /lsnas04/data/PROD/video/mlbam/$YEAR/$MNTH/$DAY1 | grep -v _x | grep -v MLB_VIDEO | grep -v AUDIO > /export/home/$USER/archive_out_mlb/$YEAR$MNTH$DAY1.out"
				echo "ls /lsnas04/data/PROD/video/mlbam/$YEAR/$MNTH/$DAY2 | grep -v _x | grep -v MLB_VIDEO | grep -v AUDIO > /export/home/$USER/archive_out_mlb/$YEAR$MNTH$DAY2.out"
				ls /lsnas04/data/PROD/video/mlbam/$YEAR/$MNTH/$DAY1 | grep -v _x | grep -v MLB_VIDEO | grep -v AUDIO > /export/home/$USER/archive_out_mlb/$YEAR$MNTH$DAY1.out
				ls /lsnas04/data/PROD/video/mlbam/$YEAR/$MNTH/$DAY2 | grep -v _x | grep -v MLB_VIDEO | grep -v AUDIO > /export/home/$USER/archive_out_mlb/$YEAR$MNTH$DAY2.out

				### Now we will do a wc on the newly created .out files to compare them to whats
				### on msnas101 if they are equal, great if not cannot push have to make sure
				### what the differences are.
				sleep 3
				echo "Get the amount of games played on $DAY1" 
				DAY1_COUNT=`cat /export/home/$USER/archive_out_mlb/$YEAR$MNTH$DAY1.out | wc -l`
				echo "$DAY1_COUNT"
				echo "Get the amount of games played on $DAY2" 
				DAY2_COUNT=`cat /export/home/$USER/archive_out_mlb/$YEAR$MNTH$DAY2.out | wc -l`
				echo "$DAY2_COUNT"
				echo "Get the amount of games from msnas101 for $DAY1"
				D1MS101_COUNT=`ls /msnas101/mlb/mlbam/$YEAR/$MNTH/$DAY1 | grep MLB_GAME_VIDEO | grep -v _x | wc -l`
				echo "$D1MS101_COUNT"
				echo "Get the amount of games from msnas101 for $DAY2"
				D2MS101_COUNT=`ls /msnas101/mlb/mlbam/$YEAR/$MNTH/$DAY2 | grep MLB_GAME_VIDEO | grep -v _x | wc -l`
				echo "$D2MS101_COUNT"

				### COMPARING>>>>>>FSJGLSALGJSA:GHASHKGASHGDASH:H
				if [[ $DAY1_COUNT == $D1MS101_COUNT && $DAY2_COUNT == $D2MS101_COUNT ]]; then
					### Push the links 
					echo "Concating Links into one file e.g. cat $DAY1 $DAY2 > $DAY1-$DAY2.out"
					### echo "Pushing Links.... This can take some time depending on how many games there were"
					### echo `/opt/bin/mlb_link_push $DAY1-$DAY2.out` ### Might have to give the full path to the out file
				else
					### If your out file contains less or more then what's on msnas101 theres a problem
					echo "Seems $DAY1 count $DAY1_COUNT and/or $DAY2 count $DAY2_COUNT do not match what is on /msnas101 contact Bill Zurat or another member of mm-systems"
					echo "Exiting....."
					exit 0
				fi
			elif [[ ]]
				
			fi
		fi
	fi
fi

